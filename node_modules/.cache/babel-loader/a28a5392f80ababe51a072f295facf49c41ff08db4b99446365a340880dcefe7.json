{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const deleteTodo = id => {\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n\n  //---güncelleme butonu işlemleri\n  const editTask = id => {\n    setEditedTask(id);\n  };\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      gorev: newTask\n    } : todo);\n    setList(updatedList);\n    setEditedTask(null);\n  }; //---güncelleme butonu işlemleri\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (input.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n\n      alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: input\n      };\n      setList([...list, newGorev]);\n      setInput('');\n      alert('Görev ekleme işlemi başarılı.');\n    }\n  };\n\n  // Sayfa yüklendiğinde listedeki verileri local storage den almak\n  useEffect(() => {\n    const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n    if (localDatas) {\n      setList(localDatas);\n    }\n  }, []);\n\n  // Liste her güncellendiğinde local storage de güncellenmesi\n  useEffect(() => {\n    localStorage.setItem(\"taskList\", JSON.stringify(list));\n  }, [list]);\n\n  // Eğer listede hiçbir iş yoksa To-Do List yazısını “Yeşil”, varsa “Siyah” olarak göstermek için;\n  const isListEmpty = list.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isListEmpty ? \"green\" : \"black\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editedTask === todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.gorev,\n            onChange: e => saveEditedTask(todo.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveEditedTask(todo.id, todo.gorev),\n            children: \"Kaydet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [todo.gorev, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTask(todo.id),\n            children: \"D\\xFCzenle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"kiNiw3iAle2ey5UknpVlixFJc5k=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","list","setList","input","setInput","deleteTodo","id","newList","filter","todo","editTask","setEditedTask","saveEditedTask","newTask","updatedList","map","gorev","addTask","trim","alert","newGorev","Math","random","localDatas","JSON","parse","localStorage","getItem","setItem","stringify","isListEmpty","length","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","editedTask","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction TodoList() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n\n  const deleteTodo = (id) => {\n    const newList = list.filter((todo) => todo.id !== id);\n    setList(newList);\n  }\n\n  //---güncelleme butonu işlemleri\n  const editTask = (id) => {\n    setEditedTask(id);\n  };\n\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, gorev: newTask } : todo\n    );\n    setList(updatedList);\n    setEditedTask(null);\n  }; //---güncelleme butonu işlemleri\n\n\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (input.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n\n      alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: input,\n      };\n      setList([...list, newGorev]);\n      setInput('');\n      alert('Görev ekleme işlemi başarılı.');\n    }\n  };\n\n\n  // Sayfa yüklendiğinde listedeki verileri local storage den almak\n  useEffect(() => {\n    const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n    if (localDatas) {\n      setList(localDatas);\n    }\n  }, []);\n\n\n\n  // Liste her güncellendiğinde local storage de güncellenmesi\n  useEffect(() => {\n    localStorage.setItem(\"taskList\", JSON.stringify(list));\n  }, [list]);\n\n\n\n\n  // Eğer listede hiçbir iş yoksa To-Do List yazısını “Yeşil”, varsa “Siyah” olarak göstermek için;\n  const isListEmpty = list.length === 0;\n\n\n  return (\n    <div>\n      <h1 style={{ color: isListEmpty ? \"green\" : \"black\" }}>Todo List</h1>\n\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)} />\n\n      <button onClick={addTask}>Ekle</button>\n\n\n      <ul>\n        {list.map((todo) => (\n          <li key={todo.id}>\n            {editedTask === todo.id ? (\n              <div>\n                <input\n                  type=\"text\"\n                  value={todo.gorev}\n                  onChange={(e) => saveEditedTask(todo.id, e.target.value)}\n                />\n                <button onClick={() => saveEditedTask(todo.id, todo.gorev)}>\n                  Kaydet\n                </button>\n              </div>\n            ) : (\n              <div>\n                {todo.gorev}\n                <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n                <button onClick={() => editTask(todo.id)}>Düzenle</button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}