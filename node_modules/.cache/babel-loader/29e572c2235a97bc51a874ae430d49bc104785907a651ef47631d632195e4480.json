{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  // State tanımlayın\n  const [task, setTask] = useState('');\n  const [list, setList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Görev ekleme işlevi\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Yap\\u0131lacaklar\\u0131 girin\",\n      value: task,\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask = () => {\n        if (task.trim() === '') {\n          // Eğer görev boşsa hata mesajı göster\n          setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n        } else {\n          // Görevi listeye ekleyin ve hata mesajını temizleyin\n          setList([...list, task]);\n          setTask('');\n          setErrorMessage('');\n        }\n      },\n      children: \"EKLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"NFRtv74eThf1s1DDm3b6Rh5hCJg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","task","setTask","list","setList","errorMessage","setErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","addTask","trim","map","todo","index","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoList() {\n  // State tanımlayın\n  const [task, setTask] = useState('');\n  const [list, setList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Görev ekleme işlevi\n\n\n\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Yapılacakları girin\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n      />\n\n\n      <button onClick={addTask = () => {\n        if (task.trim() === '') {\n          // Eğer görev boşsa hata mesajı göster\n          setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n        } else {\n          // Görevi listeye ekleyin ve hata mesajını temizleyin\n          setList([...list, task]);\n          setTask('');\n          setErrorMessage('');\n        }\n      }}>EKLE</button>\n\n\n\n\n\n\n\n\n\n\n      {errorMessage && <p>{errorMessage}</p>}\n\n\n\n      <ul>\n        {list.map((todo, index) => (\n          <li key={index}>{todo}</li>\n        ))}\n      </ul>\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpD;;EAKA,oBACEE,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,+BAAqB;MACjCC,KAAK,EAAEb,IAAK;MACZc,QAAQ,EAAGC,CAAC,IAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eAGFb,OAAA;MAAQoB,OAAO,EAAEC,OAAO,GAAGA,CAAA,KAAM;QAC/B,IAAIlB,IAAI,CAACmB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;UACtB;UACAd,eAAe,CAAC,4CAA4C,CAAC;QAC/D,CAAC,MAAM;UACL;UACAF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,IAAI,CAAC,CAAC;UACxBC,OAAO,CAAC,EAAE,CAAC;UACXI,eAAe,CAAC,EAAE,CAAC;QACrB;MACF,CAAE;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAWfN,YAAY,iBAAIP,OAAA;MAAAS,QAAA,EAAIF;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAItCb,OAAA;MAAAS,QAAA,EACGJ,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBzB,OAAA;QAAAS,QAAA,EAAiBe;MAAI,GAAZC,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMF,CAAC;AAEV;AAACX,EAAA,CA3DQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}