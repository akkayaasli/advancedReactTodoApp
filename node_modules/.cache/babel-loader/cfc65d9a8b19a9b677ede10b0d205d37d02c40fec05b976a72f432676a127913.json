{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const deleteTodo = id => {\n    const newList = list.filter(todo => todo.id != id);\n    setList(newList);\n  };\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (task.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n      setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: task\n      };\n      setList([...list, newGorev]);\n      setTask('');\n      setErrorMessage('Görev ekleme işlemi başarılı.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(input),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n//TASARIM DEĞİŞTİR, GÜNCELLE EKLE.\n\n/*Ekle butonuna basLğımda girilen veri boş ilse listeye ekleme yapmayacak ve ekrana alert \nile “Yapılacaklar girişine boş meHn eklenemez” uyarısını verecek.*/\n\n/* Eğer listede hiçbir iş yoksa To-Do List yazısını “Yeşil”, varsa “Siyah” olarak gösteriniz. */\n\n/*Liste localstorage a kaydedilir. Sayfa yenilense bile listedeki elemanlar kaybolmaz*/\n_s(App, \"1sJCLQuO0XEkmukMmmTsqbCMNi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","list","setList","input","setInput","errorMessage","setErrorMessage","deleteTodo","id","newList","filter","todo","addTask","task","trim","newGorev","Math","random","gorev","setTask","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n\n\n\n  const deleteTodo = (id) => {\n    const newList = list.filter((todo) => todo.id != id\n    );\n    setList(newList);\n  }\n\n\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (task.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n      setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: task,\n      };\n      setList([...list, newGorev]);\n      setTask('');\n      setErrorMessage('Görev ekleme işlemi başarılı.');\n\n    }\n  };\n\n\n\n\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)} />\n      <button onClick={() => addTask(input)}>Add</button>\n\n      <ul>\n        {list.map((todo) => (\n          <li key={todo.id}>\n            {todo.todo}\n            <button onClick={() => deleteTodo(todo.id)} >&times;</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n//TASARIM DEĞİŞTİR, GÜNCELLE EKLE.\n\n/*Ekle butonuna basLğımda girilen veri boş ilse listeye ekleme yapmayacak ve ekrana alert \nile “Yapılacaklar girişine boş meHn eklenemez” uyarısını verecek.*/\n\n/* Eğer listede hiçbir iş yoksa To-Do List yazısını “Yeşil”, varsa “Siyah” olarak gösteriniz. */\n\n/*Liste localstorage a kaydedilir. Sayfa yenilense bile listedeki elemanlar kaybolmaz*/\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAIpD,MAAMW,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGR,IAAI,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,IAAIA,EACjD,CAAC;IACDN,OAAO,CAACO,OAAO,CAAC;EAClB,CAAC;;EAID;EACA,MAAMG,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIC,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtB;MACAR,eAAe,CAAC,4CAA4C,CAAC;IAC/D,CAAC,MAAM;MACL;MACA,MAAMS,QAAQ,GAAG;QACfP,EAAE,EAAEQ,IAAI,CAACC,MAAM,CAAC,CAAC;QACjBC,KAAK,EAAEL;MACT,CAAC;MACDX,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEc,QAAQ,CAAC,CAAC;MAC5BI,OAAO,CAAC,EAAE,CAAC;MACXb,eAAe,CAAC,+BAA+B,CAAC;IAElD;EACF,CAAC;EAMD,oBACER,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAChBC,KAAK,EAAEvB,KAAM;MACbwB,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C1B,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAACT,KAAK,CAAE;MAAAiB,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEnD1B,OAAA;MAAAsB,QAAA,EACGnB,IAAI,CAAC8B,GAAG,CAAEpB,IAAI,iBACbb,OAAA;QAAAsB,QAAA,GACGT,IAAI,CAACA,IAAI,eACVb,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACI,IAAI,CAACH,EAAE,CAAE;UAAAY,QAAA,EAAE;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFtDb,IAAI,CAACH,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AACA;;AAEA;AACA;;AAEA;;AAEA;AAAAxB,EAAA,CA/DSD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}