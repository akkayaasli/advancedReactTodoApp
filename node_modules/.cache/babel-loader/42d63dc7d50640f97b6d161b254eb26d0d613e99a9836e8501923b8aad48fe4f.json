{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\basicReactTodoApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  // Tahmini süre alanı\n  const [spentTime, setSpentTime] = useState(\"00:00\");\n  // Harcanan süre alanı\n  const [completed, setCompleted] = useState(false); // Görev tamamlandı mı?\n\n  const deleteTodo = id => {\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n  const editTask = id => {\n    setEditedTask(id);\n  };\n  const addTask = () => {\n    if (input.trim() === \"\") {\n      alert(\"Görev girişine boş metin eklenemez.\");\n    } else if (!isValidTime(estimatedTime)) {\n      alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n    } else {\n      const newTask = {\n        id: Math.random(),\n        gorev: input,\n        tahminiSaat: estimatedTime,\n        harcananSaat: spentTime,\n        // Harcanan süre\n        tamamlandi: completed // Görev tamamlandı durumu\n      };\n\n      setList([...list, newTask]);\n      setInput(\"\");\n      setEstimatedTime(\"\");\n      setSpentTime(\"\");\n      setCompleted(false); // Varsayılan olarak görev tamamlanmamış olur\n      alert(\"Görev ekleme işlemi başarılı.\");\n    }\n  };\n  const isValidTime = timeStr => {\n    // Saat değerini doğrula (örneğin, \"HH:MM\" formatına uymalıdır)\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n    return timeRegex.test(timeStr);\n  };\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      gorev: newTask\n    } : todo);\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n  const saveToLocalStorage = data => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n  const saveEditedTime = (id, newTime) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tahminiSaat: newTime\n    } : todo);\n    setList(updatedList);\n  };\n  const startStopTimer = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      timerRunning: !todo.timerRunning // Zamanlayıcıyı başlat veya durdur\n    } : todo);\n    setList(updatedList);\n  };\n  const completeTask = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tamamlandi: true // Görevi tamamlandı olarak işaretle\n    } : todo);\n    setList(updatedList);\n  };\n  const toggleCompleted = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tamamlandi: !todo.tamamlandi\n    } : todo);\n    setList(updatedList);\n  };\n\n  /*   const toggleTimer = (id) => {\n      const updatedList = list.map((todo) => {\n        if (todo.id === id) {\n          if (!todo.timerRunning) {\n            // Eğer bu işlemde süre çalışmıyorsa ve başlatılmadıysa başlat\n            const anotherRunningTask = list.find((task) => task.timerRunning);\n            if (!anotherRunningTask) {\n  \n              return { ...todo, timerRunning: true };\n            } else {\n              alert(\"Başka bir işlem için süre çalışıyor.\");\n              return todo;\n            }\n          } else {\n            // Eğer bu işlemde süre çalışıyorsa ve duraklatılmışsa durdur\n            return { ...todo, timerRunning: false };\n          }\n        }\n        return todo;\n      });\n      setList(updatedList);\n    };\n   */\n\n  const toggleTimer = id => {\n    const updatedList = list.map(todo => {\n      if (todo.id === id) {\n        if (!todo.timerRunning) {\n          const anotherRunningTask = list.find(task => task.timerRunning);\n          if (!anotherRunningTask) {\n            return {\n              ...todo,\n              timerRunning: true\n            };\n          } else {\n            // Eğer başka bir işlemde süre çalışıyorsa, o işlemi durdur ve bu işlemi başlat\n            const updatedAnotherTask = {\n              ...anotherRunningTask,\n              timerRunning: false\n            };\n            return [updatedAnotherTask, {\n              ...todo,\n              timerRunning: true\n            }];\n          }\n        } else {\n          // Eğer bu işlemde süre çalışıyorsa ve duraklatılmışsa durdur\n          return {\n            ...todo,\n            timerRunning: false\n          };\n        }\n      }\n      return todo;\n    });\n\n    // updatedList, bir diziyi içeren bir dizi olacağından, düzgün bir şekilde birleştirmemiz gerekiyor.\n    const flatUpdatedList = updatedList.reduce((acc, curr) => {\n      if (Array.isArray(curr)) {\n        return acc.concat(curr);\n      } else {\n        acc.push(curr);\n        return acc;\n      }\n    }, []);\n    setList(flatUpdatedList);\n  };\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      const updatedList = list.map(todo => {\n        if (todo.timerRunning) {\n          // Timer çalışıyorsa harcanan süreyi arttır\n          const newSpentTime = addTime(todo.harcananSaat);\n          return {\n            ...todo,\n            harcananSaat: newSpentTime\n          };\n        }\n        return todo;\n      });\n      setList(updatedList);\n    }, 1000); // Her saniyede bir güncelle\n\n    return () => {\n      clearInterval(timerInterval); // Komponent kaldırıldığında zamanlayıcıyı temizle\n    };\n  }, [list]);\n  const addTime = timeStr => {\n    const [hours, minutes] = timeStr.split(\":\");\n    const totalMinutes = parseInt(hours) * 60 + parseInt(minutes);\n    const newTotalMinutes = totalMinutes + 1; // Bir saniye ekle\n    const newHours = Math.floor(newTotalMinutes / 60);\n    const newMinutes = newTotalMinutes % 60;\n    return `${newHours.toString().padStart(2, \"0\")}:${newMinutes.toString().padStart(2, \"0\")}`;\n  };\n\n  // Süresi başlatılmamış yani o an aktif olmayan işlemde eğer harcanan süre tahmini süreyi geçtiyse “backgorund” kırmızı olacak.Geçmemişse mavi olacak.\n  const calculateTimeDifference = (estimatedTime, spentTime) => {\n    const [estimatedHours, estimatedMinutes] = estimatedTime.split(\":\").map(Number);\n    const [spentHours, spentMinutes] = spentTime.split(\":\").map(Number);\n    const estimatedMinutesTotal = estimatedHours * 60 + estimatedMinutes;\n    const spentMinutesTotal = spentHours * 60 + spentMinutes;\n    return spentMinutesTotal - estimatedMinutesTotal;\n  };\n\n  // Aynı anda sadece bir işlem için süre işletilebilir.\n\n  const newTask = {\n    id: Math.random(),\n    gorev: input,\n    tahminiSaat: estimatedTime,\n    harcananSaat: spentTime,\n    tamamlandi: completed,\n    timerRunning: false // Timer başlatılmadı\n  };\n\n  const isListEmpty = list.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isListEmpty ? \"green\" : \"black\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input\",\n      type: \"text\",\n      placeholder: \"G\\xF6rev\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input\",\n      type: \"text\",\n      placeholder: \"Tahmini S\\xFCre (HH:MM)\",\n      value: estimatedTime,\n      onChange: e => setEstimatedTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\"\n      },\n      onClick: addTask,\n      children: \"EKLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"G\\xF6rev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Tahmini S\\xFCre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Harcanan S\\xFCre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"Tamamlanma Durumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\u0130\\u015Flemler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: calculateTimeDifference(todo.tahminiSaat, todo.harcananSaat) > 0 ? \"time-exceeded\" : \"time-ok\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedTask === todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: todo.gorev,\n                onChange: e => saveEditedTask(todo.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: todo.tahminiSaat // Tahmini süreyi görüntüle\n                ,\n                onChange: e => saveEditedTime(todo.id, e.target.value) // Tahmini süreyi kaydetmek için işlev ekleyin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEditedTask(todo.id, todo.gorev),\n                children: \"KAYDET\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: todo.timerRunning ? \"yellow\" : \"\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                style: {\n                  backgroundColor: todo.tamamlandi ? \"green\" : \"transparent\",\n                  color: todo.tamamlandi ? \"white\" : \"black\"\n                },\n                children: todo.gorev\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.tahminiSaat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.harcananSaat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !todo.tamamlandi ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                  marginLeft: \"10px\"\n                },\n                onClick: () => completeTask(todo.id),\n                children: \"TAMAMLA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"G\\xF6rev Tamamland\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"red\",\n                color: \"white\",\n                marginRight: \"10px\"\n              },\n              onClick: () => deleteTodo(todo.id),\n              disabled: todo.timerRunning,\n              children: \"S\\u0130L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"yellow\",\n                color: \"gray\",\n                marginLeft: \"10px\",\n                visibility: todo.tamamlandi ? \"hidden\" : \"visible\"\n              },\n              onClick: () => editTask(todo.id),\n              children: \"D\\xDCZENLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                marginLeft: \"10px\",\n                visibility: todo.tamamlandi ? \"hidden\" : \"visible\"\n              },\n              onClick: () => toggleTimer(todo.id),\n              children: todo.timerRunning ? \"Durdur\" : \"Başlat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"Y/ZoTDmKffq/Ak81G0fbYoFd5yY=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","list","setList","input","setInput","editedTask","setEditedTask","estimatedTime","setEstimatedTime","spentTime","setSpentTime","completed","setCompleted","deleteTodo","id","newList","filter","todo","editTask","addTask","trim","alert","isValidTime","newTask","Math","random","gorev","tahminiSaat","harcananSaat","tamamlandi","timeStr","timeRegex","test","saveEditedTask","updatedList","map","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","localDatas","length","saveEditedTime","newTime","startStopTimer","timerRunning","completeTask","toggleCompleted","toggleTimer","anotherRunningTask","find","task","updatedAnotherTask","flatUpdatedList","reduce","acc","curr","Array","isArray","concat","push","timerInterval","setInterval","newSpentTime","addTime","clearInterval","hours","minutes","split","totalMinutes","parseInt","newTotalMinutes","newHours","floor","newMinutes","toString","padStart","calculateTimeDifference","estimatedHours","estimatedMinutes","Number","spentHours","spentMinutes","estimatedMinutesTotal","spentMinutesTotal","isListEmpty","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","backgroundColor","onClick","marginRight","marginLeft","disabled","visibility","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/basicReactTodoApp/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\n\nimport \"./TodoList.css\";\n\n\n\n\n\nfunction TodoList() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  // Tahmini süre alanı\n  const [spentTime, setSpentTime] = useState(\"00:00\");\n  // Harcanan süre alanı\n  const [completed, setCompleted] = useState(false); // Görev tamamlandı mı?\n\n\n\n\n\n\n\n\n\n\n  const deleteTodo = (id) => {\n    const newList = list.filter((todo) => todo.id !== id);\n    setList(newList);\n  };\n\n\n\n  const editTask = (id) => {\n    setEditedTask(id);\n\n  };\n\n\n\n\n  const addTask = () => {\n    if (input.trim() === \"\") {\n      alert(\"Görev girişine boş metin eklenemez.\");\n    } else if (!isValidTime(estimatedTime)) {\n      alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n    } else {\n      const newTask = {\n        id: Math.random(),\n        gorev: input,\n        tahminiSaat: estimatedTime,\n        harcananSaat: spentTime, // Harcanan süre\n        tamamlandi: completed, // Görev tamamlandı durumu\n\n      };\n      setList([...list, newTask]);\n      setInput(\"\");\n      setEstimatedTime(\"\");\n      setSpentTime(\"\");\n      setCompleted(false); // Varsayılan olarak görev tamamlanmamış olur\n      alert(\"Görev ekleme işlemi başarılı.\");\n    }\n  };\n\n\n\n\n\n\n\n  const isValidTime = (timeStr) => {\n    // Saat değerini doğrula (örneğin, \"HH:MM\" formatına uymalıdır)\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n    return timeRegex.test(timeStr);\n  };\n\n\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, gorev: newTask } : todo\n    );\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n\n\n  const saveToLocalStorage = (data) => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n\n\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n\n\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n\n\n\n  const saveEditedTime = (id, newTime) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, tahminiSaat: newTime } : todo\n    );\n    setList(updatedList);\n  };\n\n\n  const startStopTimer = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id\n        ? {\n          ...todo,\n          timerRunning: !todo.timerRunning, // Zamanlayıcıyı başlat veya durdur\n\n        }\n        : todo\n    );\n    setList(updatedList);\n  };\n\n  const completeTask = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id\n        ? {\n          ...todo,\n          tamamlandi: true, // Görevi tamamlandı olarak işaretle\n        }\n        : todo\n    );\n    setList(updatedList);\n  };\n\n\n\n  const toggleCompleted = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, tamamlandi: !todo.tamamlandi } : todo\n    );\n    setList(updatedList);\n  };\n\n\n\n\n\n  /*   const toggleTimer = (id) => {\n      const updatedList = list.map((todo) => {\n        if (todo.id === id) {\n          if (!todo.timerRunning) {\n            // Eğer bu işlemde süre çalışmıyorsa ve başlatılmadıysa başlat\n            const anotherRunningTask = list.find((task) => task.timerRunning);\n            if (!anotherRunningTask) {\n  \n              return { ...todo, timerRunning: true };\n            } else {\n              alert(\"Başka bir işlem için süre çalışıyor.\");\n              return todo;\n            }\n          } else {\n            // Eğer bu işlemde süre çalışıyorsa ve duraklatılmışsa durdur\n            return { ...todo, timerRunning: false };\n          }\n        }\n        return todo;\n      });\n      setList(updatedList);\n    };\n   */\n\n\n\n\n  const toggleTimer = (id) => {\n    const updatedList = list.map((todo) => {\n      if (todo.id === id) {\n        if (!todo.timerRunning) {\n          const anotherRunningTask = list.find((task) => task.timerRunning);\n          if (!anotherRunningTask) {\n            return { ...todo, timerRunning: true };\n          } else {\n            // Eğer başka bir işlemde süre çalışıyorsa, o işlemi durdur ve bu işlemi başlat\n            const updatedAnotherTask = { ...anotherRunningTask, timerRunning: false };\n            return [updatedAnotherTask, { ...todo, timerRunning: true }];\n          }\n        } else {\n          // Eğer bu işlemde süre çalışıyorsa ve duraklatılmışsa durdur\n          return { ...todo, timerRunning: false };\n        }\n      }\n      return todo;\n    });\n\n    // updatedList, bir diziyi içeren bir dizi olacağından, düzgün bir şekilde birleştirmemiz gerekiyor.\n    const flatUpdatedList = updatedList.reduce((acc, curr) => {\n      if (Array.isArray(curr)) {\n        return acc.concat(curr);\n      } else {\n        acc.push(curr);\n        return acc;\n      }\n    }, []);\n\n    setList(flatUpdatedList);\n  };\n\n\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      const updatedList = list.map((todo) => {\n        if (todo.timerRunning) {\n          // Timer çalışıyorsa harcanan süreyi arttır\n          const newSpentTime = addTime(todo.harcananSaat);\n          return { ...todo, harcananSaat: newSpentTime };\n        }\n        return todo;\n      });\n      setList(updatedList);\n    }, 1000); // Her saniyede bir güncelle\n\n    return () => {\n      clearInterval(timerInterval); // Komponent kaldırıldığında zamanlayıcıyı temizle\n    };\n  }, [list]);\n\n\n\n  const addTime = (timeStr) => {\n    const [hours, minutes] = timeStr.split(\":\");\n    const totalMinutes = parseInt(hours) * 60 + parseInt(minutes);\n    const newTotalMinutes = totalMinutes + 1; // Bir saniye ekle\n    const newHours = Math.floor(newTotalMinutes / 60);\n    const newMinutes = newTotalMinutes % 60;\n    return `${newHours.toString().padStart(2, \"0\")}:${newMinutes.toString().padStart(2, \"0\")}`;\n\n  };\n\n  // Süresi başlatılmamış yani o an aktif olmayan işlemde eğer harcanan süre tahmini süreyi geçtiyse “backgorund” kırmızı olacak.Geçmemişse mavi olacak.\n  const calculateTimeDifference = (estimatedTime, spentTime) => {\n    const [estimatedHours, estimatedMinutes] = estimatedTime.split(\":\").map(Number);\n    const [spentHours, spentMinutes] = spentTime.split(\":\").map(Number);\n\n    const estimatedMinutesTotal = estimatedHours * 60 + estimatedMinutes;\n    const spentMinutesTotal = spentHours * 60 + spentMinutes;\n\n    return spentMinutesTotal - estimatedMinutesTotal;\n  };\n\n\n  // Aynı anda sadece bir işlem için süre işletilebilir.\n\n  const newTask = {\n    id: Math.random(),\n    gorev: input,\n    tahminiSaat: estimatedTime,\n    harcananSaat: spentTime,\n    tamamlandi: completed,\n    timerRunning: false, // Timer başlatılmadı\n  };\n\n\n\n  const isListEmpty = list.length === 0;\n\n\n\n  return (\n    <div className=\"todo-container\">\n\n      <h1 style={{ color: isListEmpty ? \"green\" : \"black\" }}>Todo List</h1>\n\n\n\n\n\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        placeholder=\"Görev\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        placeholder=\"Tahmini Süre (HH:MM)\"\n        value={estimatedTime}\n        onChange={(e) => setEstimatedTime(e.target.value)}\n      />\n\n\n\n      <button style={{ backgroundColor: \"green\", color: \"white\" }} onClick={addTask}>EKLE</button>\n      <br />\n      <table>\n        <thead>\n          <tr>\n            <th style={{ marginRight: \"10px\" }}>Görev</th>\n            <th style={{ marginRight: \"10px\" }}>Tahmini Süre</th>\n            <th style={{ marginRight: \"10px\" }}>Harcanan Süre</th>\n            <th style={{ marginLeft: \"10px\" }}>Tamamlanma Durumu</th>\n            <th style={{ marginLeft: \"10px\" }}>İşlemler</th>\n\n\n          </tr>\n        </thead>\n        <tbody>\n\n\n\n          {list.map((todo) => (\n            <tr key={todo.id} className={calculateTimeDifference(todo.tahminiSaat, todo.harcananSaat) > 0 ? \"time-exceeded\" : \"time-ok\"}\n            >\n\n\n\n\n\n              <td >\n                {editedTask === todo.id ? (\n                  <div>\n\n                    <input\n                      type=\"text\"\n                      value={todo.gorev}\n                      onChange={(e) => saveEditedTask(todo.id, e.target.value)}\n\n\n                    />\n                    <input\n                      type=\"text\"\n                      value={todo.tahminiSaat} // Tahmini süreyi görüntüle\n                      onChange={(e) => saveEditedTime(todo.id, e.target.value)} // Tahmini süreyi kaydetmek için işlev ekleyin\n                    />\n\n\n\n                    <button onClick={() => saveEditedTask(todo.id, todo.gorev)}>\n                      KAYDET\n                    </button>\n                  </div>\n                ) : (\n                  <div style={{ backgroundColor: todo.timerRunning ? \"yellow\" : \"\" }}>\n                    <strong style={{ backgroundColor: todo.tamamlandi ? \"green\" : \"transparent\", color: todo.tamamlandi ? \"white\" : \"black\" }}>\n                      {todo.gorev}\n                    </strong>\n                  </div>\n\n\n\n                )}\n              </td>\n\n\n              <td>\n                {todo.tahminiSaat}\n              </td>\n\n\n              <td>\n                {todo.harcananSaat}\n              </td>\n\n\n\n              <td>\n                {!todo.tamamlandi ? (\n                  <div>\n\n\n\n                    <button\n                      style={{ backgroundColor: \"green\", color: \"white\", marginLeft: \"10px\" }}\n                      onClick={() => completeTask(todo.id)}\n                    >\n                      TAMAMLA\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    Görev Tamamlandı\n                  </div>\n                )}\n              </td>\n\n\n\n              <td>\n                <button style={{ backgroundColor: \"red\", color: \"white\", marginRight: \"10px\" }}\n                  onClick={() => deleteTodo(todo.id)}\n                  disabled={todo.timerRunning}>\n                  SİL</button>\n\n                <button style={{ backgroundColor: \"yellow\", color: \"gray\", marginLeft: \"10px\", visibility: todo.tamamlandi ? \"hidden\" : \"visible\" }} onClick={() => editTask(todo.id)}>DÜZENLE</button>\n\n                <button\n                  style={{ backgroundColor: \"blue\", color: \"white\", marginLeft: \"10px\", visibility: todo.tamamlandi ? \"hidden\" : \"visible\" }}\n                  onClick={() => toggleTimer(todo.id)}\n                >\n                  {todo.timerRunning ? \"Durdur\" : \"Başlat\"}\n                </button>\n\n              </td>\n\n\n\n\n            </tr>\n\n\n          ))}\n\n\n\n        </tbody>\n      </table>\n    </div >\n  );\n\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}