{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\basicReactTodoApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  // Tahmini süre alanı\n  const [spentTime, setSpentTime] = useState(\"00:00\");\n  // Harcanan süre alanı\n  const [completed, setCompleted] = useState(false); // Görev tamamlandı mı?\n\n  /*   const deleteTodo = (id) => {\n      const newList = list.filter((todo) => todo.id !== id);\n  \n      setList(newList);\n    }\n   */\n\n  const deleteTodo = id => {\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n  const editTask = id => {\n    setEditedTask(id);\n  };\n\n  /*   const saveEditedTask = (id, newTask) => {\n      const updatedList = list.map((todo) =>\n        todo.id === id ? { ...todo, gorev: newTask } : todo\n  \n      );\n      setList(updatedList);\n      setEditedTask(null);\n    };\n  \n   */\n\n  /*  const addTask = () => {\n     if (input.trim() === '') {\n         alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n     } else {\n       const newGorev = {\n         id: Math.random(),\n         gorev: input,\n       };\n       setList([...list, newGorev]);\n       setInput('');\n       alert('Görev ekleme işlemi başarılı.');\n     }\n   };\n  */\n\n  /*   const addTask = () => {\n      if (input.trim() === '') {\n        alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n      } else {\n        const newGorev = {\n          id: Math.random(),\n          gorev: input,\n        };\n        setList([...list, newGorev]);\n        setInput('');\n        saveToLocalStorage([...list, newGorev]); // Veriyi localStorage'a kaydet\n        alert('Görev ekleme işlemi başarılı.');\n      }\n    }; */\n\n  /*   const addTask = () => {\n      if (input.trim() === '') {\n        alert(\"Görev girişine boş metin eklenemez.\");\n      } else if (estimatedTime.trim() === '') {\n        alert(\"Tahmini süre girişine boş metin eklenemez.\");\n      } else {\n        const newTask = {\n          id: Math.random(),\n          gorev: input,\n          tahminiSaat: estimatedTime, // Tahmini süre ekleniyor\n        };\n        setList([...list, newTask]);\n        setInput('');\n        setEstimatedTime('');\n        alert('Görev ekleme işlemi başarılı.');\n      }\n    };\n   */\n\n  /*   const addTask = () => {\n      if (input.trim() === \"\") {\n        alert(\"Görev girişine boş metin eklenemez.\");\n      } else if (!isValidTime(estimatedTime)) {\n        alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n      } else {\n        const newTask = {\n          id: Math.random(),\n          gorev: input,\n          tahminiSaat: estimatedTime,\n        };\n        setList([...list, newTask]);\n        setInput(\"\");\n        setEstimatedTime(\"\");\n        alert(\"Görev ekleme işlemi başarılı.\");\n      }\n    }; */\n\n  const addTask = () => {\n    if (input.trim() === \"\") {\n      alert(\"Görev girişine boş metin eklenemez.\");\n    } else if (!isValidTime(estimatedTime)) {\n      alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n    } else {\n      const newTask = {\n        id: Math.random(),\n        gorev: input,\n        tahminiSaat: estimatedTime,\n        harcananSaat: spentTime,\n        // Harcanan süre\n        tamamlandi: completed // Görev tamamlandı durumu\n      };\n\n      setList([...list, newTask]);\n      setInput(\"\");\n      setEstimatedTime(\"\");\n      setSpentTime(\"\");\n      setCompleted(false); // Varsayılan olarak görev tamamlanmamış olur\n      alert(\"Görev ekleme işlemi başarılı.\");\n    }\n  };\n  const isValidTime = timeStr => {\n    // Saat değerini doğrula (örneğin, \"HH:MM\" formatına uymalıdır)\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n    return timeRegex.test(timeStr);\n  };\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      gorev: newTask\n    } : todo);\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n  /*  useEffect(() => {\n     const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n       if (localDatas) {\n         setList(localDatas);\n     }\n   }, []);\n     useEffect(() => {\n     localStorage.setItem(\"taskList\", JSON.stringify(list));\n     }, [list]); */\n\n  const saveToLocalStorage = data => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n  const saveEditedTime = (id, newTime) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tahminiSaat: newTime\n    } : todo);\n    setList(updatedList);\n  };\n  const startStopTimer = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      timerRunning: !todo.timerRunning // Zamanlayıcıyı başlat veya durdur\n    } : todo);\n    setList(updatedList);\n  };\n  const completeTask = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tamamlandi: true // Görevi tamamlandı olarak işaretle\n    } : todo);\n    setList(updatedList);\n  };\n  const toggleCompleted = id => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      tamamlandi: !todo.tamamlandi\n    } : todo);\n    setList(updatedList);\n  };\n  const toggleTimer = id => {\n    const updatedList = list.map(todo => {\n      if (todo.id === id) {\n        // Eğer timerRunning true ise durdur, false ise başlat\n        return {\n          ...todo,\n          timerRunning: !todo.timerRunning\n        };\n      }\n      return todo;\n    });\n    setList(updatedList);\n  };\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      const updatedList = list.map(todo => {\n        if (todo.timerRunning) {\n          // Timer çalışıyorsa harcanan süreyi arttır\n          const newSpentTime = addTime(todo.harcananSaat);\n          return {\n            ...todo,\n            harcananSaat: newSpentTime\n          };\n        }\n        return todo;\n      });\n      setList(updatedList);\n    }, 1000); // Her saniyede bir güncelle\n\n    return () => {\n      clearInterval(timerInterval); // Komponent kaldırıldığında zamanlayıcıyı temizle\n    };\n  }, [list]);\n  const addTime = timeStr => {\n    const [hours, minutes] = timeStr.split(\":\");\n    const totalMinutes = parseInt(hours) * 60 + parseInt(minutes);\n    const newTotalMinutes = totalMinutes + 1; // Bir saniye ekle\n    const newHours = Math.floor(newTotalMinutes / 60);\n    const newMinutes = newTotalMinutes % 60;\n    return `${newHours.toString().padStart(2, \"0\")}:${newMinutes.toString().padStart(2, \"0\")}`;\n  };\n  const isListEmpty = list.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isListEmpty ? \"green\" : \"black\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input\",\n      type: \"text\",\n      placeholder: \"G\\xF6rev\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input\",\n      type: \"text\",\n      placeholder: \"Tahmini S\\xFCre (HH:MM)\",\n      value: estimatedTime,\n      onChange: e => setEstimatedTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\"\n      },\n      onClick: addTask,\n      children: \"EKLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"G\\xF6rev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Tahmini S\\xFCre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Harcanan S\\xFCre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"Tamamlanma Durumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\u0130\\u015Flemler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedTask === todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: todo.gorev,\n                onChange: e => saveEditedTask(todo.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: todo.tahminiSaat // Tahmini süreyi görüntüle\n                ,\n                onChange: e => saveEditedTime(todo.id, e.target.value) // Tahmini süreyi kaydetmek için işlev ekleyin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEditedTask(todo.id, todo.gorev),\n                children: \"KAYDET\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                style: {\n                  backgroundColor: todo.tamamlandi ? \"green\" : \"transparent\",\n                  color: todo.tamamlandi ? \"white\" : \"black\"\n                },\n                children: todo.gorev\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Tahmini S\\xFCre: \", todo.tahminiSaat, \" saat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Harcanan S\\xFCre: \", todo.harcananSaat, \" saat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !todo.tamamlandi ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                  marginLeft: \"10px\"\n                },\n                onClick: () => completeTask(todo.id),\n                children: \"TAMAMLA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  marginRight: \"10px\"\n                },\n                onClick: () => deleteTodo(todo.id),\n                children: \"S\\u0130L\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"yellow\",\n                  color: \"gray\",\n                  marginLeft: \"10px\"\n                },\n                onClick: () => editTask(todo.id),\n                children: \"D\\xDCZENLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"blue\",\n                  color: \"white\",\n                  marginLeft: \"10px\"\n                },\n                onClick: () => toggleTimer(todo.id),\n                children: todo.timerRunning ? \"Durdur\" : \"Başlat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"G\\xF6rev Tamamland\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"red\",\n                color: \"white\",\n                marginRight: \"10px\"\n              },\n              onClick: () => deleteTodo(todo.id),\n              children: \"S\\u0130L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"yellow\",\n                color: \"gray\",\n                marginLeft: \"10px\"\n              },\n              onClick: () => editTask(todo.id),\n              children: \"D\\xDCZENLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                marginLeft: \"10px\"\n              },\n              onClick: () => toggleTimer(todo.id),\n              children: todo.timerRunning ? \"Durdur\" : \"Başlat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"Y/ZoTDmKffq/Ak81G0fbYoFd5yY=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","list","setList","input","setInput","editedTask","setEditedTask","estimatedTime","setEstimatedTime","spentTime","setSpentTime","completed","setCompleted","deleteTodo","id","newList","filter","todo","editTask","addTask","trim","alert","isValidTime","newTask","Math","random","gorev","tahminiSaat","harcananSaat","tamamlandi","timeStr","timeRegex","test","saveEditedTask","updatedList","map","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","localDatas","length","saveEditedTime","newTime","startStopTimer","timerRunning","completeTask","toggleCompleted","toggleTimer","timerInterval","setInterval","newSpentTime","addTime","clearInterval","hours","minutes","split","totalMinutes","parseInt","newTotalMinutes","newHours","floor","newMinutes","toString","padStart","isListEmpty","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","backgroundColor","onClick","marginRight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/basicReactTodoApp/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\n\nimport \"./TodoList.css\";\n\n\n\n\n\nfunction TodoList() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  // Tahmini süre alanı\n  const [spentTime, setSpentTime] = useState(\"00:00\");\n  // Harcanan süre alanı\n  const [completed, setCompleted] = useState(false); // Görev tamamlandı mı?\n\n\n\n\n\n\n\n\n  /*   const deleteTodo = (id) => {\n      const newList = list.filter((todo) => todo.id !== id);\n  \n      setList(newList);\n    }\n   */\n\n  const deleteTodo = (id) => {\n    const newList = list.filter((todo) => todo.id !== id);\n    setList(newList);\n  };\n\n\n\n  const editTask = (id) => {\n    setEditedTask(id);\n\n  };\n\n  /*   const saveEditedTask = (id, newTask) => {\n      const updatedList = list.map((todo) =>\n        todo.id === id ? { ...todo, gorev: newTask } : todo\n  \n      );\n      setList(updatedList);\n      setEditedTask(null);\n    };\n  \n   */\n\n  /*  const addTask = () => {\n     if (input.trim() === '') {\n \n       alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n     } else {\n       const newGorev = {\n         id: Math.random(),\n         gorev: input,\n       };\n       setList([...list, newGorev]);\n       setInput('');\n       alert('Görev ekleme işlemi başarılı.');\n     }\n   };\n  */\n\n  /*   const addTask = () => {\n      if (input.trim() === '') {\n        alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n      } else {\n        const newGorev = {\n          id: Math.random(),\n          gorev: input,\n        };\n        setList([...list, newGorev]);\n        setInput('');\n        saveToLocalStorage([...list, newGorev]); // Veriyi localStorage'a kaydet\n        alert('Görev ekleme işlemi başarılı.');\n      }\n    }; */\n\n  /*   const addTask = () => {\n      if (input.trim() === '') {\n        alert(\"Görev girişine boş metin eklenemez.\");\n      } else if (estimatedTime.trim() === '') {\n        alert(\"Tahmini süre girişine boş metin eklenemez.\");\n      } else {\n        const newTask = {\n          id: Math.random(),\n          gorev: input,\n          tahminiSaat: estimatedTime, // Tahmini süre ekleniyor\n        };\n        setList([...list, newTask]);\n        setInput('');\n        setEstimatedTime('');\n        alert('Görev ekleme işlemi başarılı.');\n      }\n    };\n   */\n\n  /*   const addTask = () => {\n      if (input.trim() === \"\") {\n        alert(\"Görev girişine boş metin eklenemez.\");\n      } else if (!isValidTime(estimatedTime)) {\n        alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n      } else {\n        const newTask = {\n          id: Math.random(),\n          gorev: input,\n          tahminiSaat: estimatedTime,\n        };\n        setList([...list, newTask]);\n        setInput(\"\");\n        setEstimatedTime(\"\");\n        alert(\"Görev ekleme işlemi başarılı.\");\n      }\n    }; */\n\n\n  const addTask = () => {\n    if (input.trim() === \"\") {\n      alert(\"Görev girişine boş metin eklenemez.\");\n    } else if (!isValidTime(estimatedTime)) {\n      alert(\"Geçerli bir tahmini süre girmelisiniz.\");\n    } else {\n      const newTask = {\n        id: Math.random(),\n        gorev: input,\n        tahminiSaat: estimatedTime,\n        harcananSaat: spentTime, // Harcanan süre\n        tamamlandi: completed, // Görev tamamlandı durumu\n      };\n      setList([...list, newTask]);\n      setInput(\"\");\n      setEstimatedTime(\"\");\n      setSpentTime(\"\");\n      setCompleted(false); // Varsayılan olarak görev tamamlanmamış olur\n      alert(\"Görev ekleme işlemi başarılı.\");\n    }\n  };\n\n\n\n\n\n\n\n  const isValidTime = (timeStr) => {\n    // Saat değerini doğrula (örneğin, \"HH:MM\" formatına uymalıdır)\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n    return timeRegex.test(timeStr);\n  };\n\n\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, gorev: newTask } : todo\n    );\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n\n  /*  useEffect(() => {\n     const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n \n     if (localDatas) {\n \n       setList(localDatas);\n     }\n   }, []);\n \n   useEffect(() => {\n     localStorage.setItem(\"taskList\", JSON.stringify(list));\n \n   }, [list]); */\n\n  const saveToLocalStorage = (data) => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n\n\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n\n\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n\n\n\n  const saveEditedTime = (id, newTime) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, tahminiSaat: newTime } : todo\n    );\n    setList(updatedList);\n  };\n\n\n  const startStopTimer = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id\n        ? {\n          ...todo,\n          timerRunning: !todo.timerRunning, // Zamanlayıcıyı başlat veya durdur\n        }\n        : todo\n    );\n    setList(updatedList);\n  };\n\n  const completeTask = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id\n        ? {\n          ...todo,\n          tamamlandi: true, // Görevi tamamlandı olarak işaretle\n        }\n        : todo\n    );\n    setList(updatedList);\n  };\n\n\n\n  const toggleCompleted = (id) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, tamamlandi: !todo.tamamlandi } : todo\n    );\n    setList(updatedList);\n  };\n  const toggleTimer = (id) => {\n    const updatedList = list.map((todo) => {\n      if (todo.id === id) {\n        // Eğer timerRunning true ise durdur, false ise başlat\n        return { ...todo, timerRunning: !todo.timerRunning };\n      }\n      return todo;\n    });\n    setList(updatedList);\n  };\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      const updatedList = list.map((todo) => {\n        if (todo.timerRunning) {\n          // Timer çalışıyorsa harcanan süreyi arttır\n          const newSpentTime = addTime(todo.harcananSaat);\n          return { ...todo, harcananSaat: newSpentTime };\n        }\n        return todo;\n      });\n      setList(updatedList);\n    }, 1000); // Her saniyede bir güncelle\n\n    return () => {\n      clearInterval(timerInterval); // Komponent kaldırıldığında zamanlayıcıyı temizle\n    };\n  }, [list]);\n\n\n\n  const addTime = (timeStr) => {\n    const [hours, minutes] = timeStr.split(\":\");\n    const totalMinutes = parseInt(hours) * 60 + parseInt(minutes);\n    const newTotalMinutes = totalMinutes + 1; // Bir saniye ekle\n    const newHours = Math.floor(newTotalMinutes / 60);\n    const newMinutes = newTotalMinutes % 60;\n    return `${newHours.toString().padStart(2, \"0\")}:${newMinutes.toString().padStart(2, \"0\")}`;\n\n  };\n\n\n\n  const isListEmpty = list.length === 0;\n\n\n\n  return (\n    <div className=\"todo-container\">\n\n      <h1 style={{ color: isListEmpty ? \"green\" : \"black\" }}>Todo List</h1>\n\n\n\n\n\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        placeholder=\"Görev\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        placeholder=\"Tahmini Süre (HH:MM)\"\n        value={estimatedTime}\n        onChange={(e) => setEstimatedTime(e.target.value)}\n      />\n\n\n\n      <button style={{ backgroundColor: \"green\", color: \"white\" }} onClick={addTask}>EKLE</button>\n      <br />\n      <table>\n        <thead>\n          <tr>\n            <th style={{ marginRight: \"10px\" }}>Görev</th>\n            <th style={{ marginRight: \"10px\" }}>Tahmini Süre</th>\n            <th style={{ marginRight: \"10px\" }}>Harcanan Süre</th>\n            <th style={{ marginLeft: \"10px\" }}>Tamamlanma Durumu</th>\n            <th style={{ marginLeft: \"10px\" }}>İşlemler</th>\n\n\n          </tr>\n        </thead>\n        <tbody>\n\n\n\n          {list.map((todo) => (\n            <tr key={todo.id} >\n\n\n\n              <td >\n                {editedTask === todo.id ? (\n                  <div>\n\n                    <input\n                      type=\"text\"\n                      value={todo.gorev}\n                      onChange={(e) => saveEditedTask(todo.id, e.target.value)}\n\n                    />\n                    <input\n                      type=\"text\"\n                      value={todo.tahminiSaat} // Tahmini süreyi görüntüle\n                      onChange={(e) => saveEditedTime(todo.id, e.target.value)} // Tahmini süreyi kaydetmek için işlev ekleyin\n                    />\n\n\n\n                    <button onClick={() => saveEditedTask(todo.id, todo.gorev)}>\n                      KAYDET\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    <strong style={{ backgroundColor: todo.tamamlandi ? \"green\" : \"transparent\", color: todo.tamamlandi ? \"white\" : \"black\" }}>\n                      {todo.gorev}\n                    </strong>\n\n                  </div>\n                )}\n              </td>\n\n\n              <td>\n                Tahmini Süre: {todo.tahminiSaat} saat\n              </td>\n\n\n              <td>\n                Harcanan Süre: {todo.harcananSaat} saat\n              </td>\n\n\n\n              <td>\n                {!todo.tamamlandi ? (\n                  <div>\n\n\n\n                    {/*                     <button\n                      style={{ backgroundColor: \"blue\", color: \"white\" }}\n                      onClick={() => startStopTimer(todo.id)}\n                    >\n                      {todo.timerRunning ? \"DURDUR\" : \"BAŞLAT\"}\n                    </button>\n */}\n\n\n                    <button\n                      style={{ backgroundColor: \"green\", color: \"white\", marginLeft: \"10px\" }}\n                      onClick={() => completeTask(todo.id)}\n                    >\n                      TAMAMLA\n                    </button>\n\n                    <button\n                      style={{ backgroundColor: \"red\", color: \"white\", marginRight: \"10px\" }}\n                      onClick={() => deleteTodo(todo.id)}\n                    >\n                      SİL\n                    </button>\n\n\n                    <button\n                      style={{ backgroundColor: \"yellow\", color: \"gray\", marginLeft: \"10px\" }}\n                      onClick={() => editTask(todo.id)}\n                    >\n                      DÜZENLE\n                    </button>\n\n\n                    <button\n                      style={{ backgroundColor: \"blue\", color: \"white\", marginLeft: \"10px\" }}\n                      onClick={() => toggleTimer(todo.id)}\n                    >\n                      {todo.timerRunning ? \"Durdur\" : \"Başlat\"}\n                    </button>\n\n\n                  </div>\n                ) : (\n                  <div>\n                    Görev Tamamlandı\n                  </div>\n                )}\n              </td>\n\n\n\n              <td>\n\n\n                <button\n                  style={{ backgroundColor: \"red\", color: \"white\", marginRight: \"10px\" }}\n                  onClick={() => deleteTodo(todo.id)}\n                >\n                  SİL\n                </button>\n\n                <button style={{ backgroundColor: \"yellow\", color: \"gray\", marginLeft: \"10px\" }} onClick={() => editTask(todo.id)}>DÜZENLE</button>\n\n                <button\n                  style={{ backgroundColor: \"blue\", color: \"white\", marginLeft: \"10px\" }}\n                  onClick={() => toggleTimer(todo.id)}\n                >\n                  {todo.timerRunning ? \"Durdur\" : \"Başlat\"}\n                </button>\n\n              </td>\n\n\n\n\n            </tr>\n\n\n          ))}\n\n\n\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}