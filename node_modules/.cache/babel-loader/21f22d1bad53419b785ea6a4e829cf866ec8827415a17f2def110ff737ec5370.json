{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\basicReactTodoApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n  const deleteTodo = id => {\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n\n  /* \n    const editTask = (id) => {\n      setEditedTask(id);\n  \n    };\n   */\n\n  const editTask = id => {\n    setEditedTask(id);\n  };\n\n  /*   const saveEditedTask = (id, newTask) => {\n      const updatedList = list.map((todo) =>\n        todo.id === id ? { ...todo, gorev: newTask } : todo\n  \n      );\n      setList(updatedList);\n      setEditedTask(null);\n    };\n  \n   */\n\n  /*  const addTask = () => {\n     if (input.trim() === '') {\n         alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n     } else {\n       const newGorev = {\n         id: Math.random(),\n         gorev: input,\n       };\n       setList([...list, newGorev]);\n       setInput('');\n       alert('Görev ekleme işlemi başarılı.');\n     }\n   };\n  */\n\n  const addTask = () => {\n    if (input.trim() === '') {\n      alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n    } else {\n      const newGorev = {\n        id: Math.random(),\n        gorev: input\n      };\n      setList([...list, newGorev]);\n      setInput('');\n      saveToLocalStorage([...list, newGorev]); // Veriyi localStorage'a kaydet\n      alert('Görev ekleme işlemi başarılı.');\n    }\n  };\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map(todo => todo.id === id ? {\n      ...todo,\n      gorev: newTask\n    } : todo);\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n  /*  useEffect(() => {\n     const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n       if (localDatas) {\n         setList(localDatas);\n     }\n   }, []);\n     useEffect(() => {\n     localStorage.setItem(\"taskList\", JSON.stringify(list));\n     }, [list]); */\n\n  const saveToLocalStorage = data => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n  const isListEmpty = list.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isListEmpty ? \"green\" : \"black\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input\",\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\"\n      },\n      onClick: addTask,\n      children: \"EKLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"G\\xF6rev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"\\u0130\\u015Flemler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editedTask === todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: todo.gorev,\n                onChange: e => saveEditedTask(todo.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEditedTask(todo.id, todo.gorev),\n                children: \"KAYDET\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [todo.gorev, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editTask(todo.id),\n                children: \"D\\xDCZENLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"NCpfnIWCuXPujoEbXX+LR1uFqHA=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","list","setList","input","setInput","editedTask","setEditedTask","deleteTodo","id","newList","filter","todo","editTask","addTask","trim","alert","newGorev","Math","random","gorev","saveToLocalStorage","saveEditedTask","newTask","updatedList","map","data","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","localDatas","length","isListEmpty","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","backgroundColor","onClick","marginRight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/basicReactTodoApp/src/App.js"],"sourcesContent":["\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\n\nimport \"./TodoList.css\";\n\n\n\nfunction TodoList() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editedTask, setEditedTask] = useState(null);\n\n\n\n\n\n\n  const deleteTodo = (id) => {\n    const newList = list.filter((todo) => todo.id !== id);\n\n    setList(newList);\n  }\n\n\n\n\n  /* \n    const editTask = (id) => {\n      setEditedTask(id);\n  \n    };\n   */\n\n  const editTask = (id) => {\n    setEditedTask(id);\n  };\n\n\n\n\n\n  /*   const saveEditedTask = (id, newTask) => {\n      const updatedList = list.map((todo) =>\n        todo.id === id ? { ...todo, gorev: newTask } : todo\n  \n      );\n      setList(updatedList);\n      setEditedTask(null);\n    };\n  \n   */\n\n  /*  const addTask = () => {\n     if (input.trim() === '') {\n \n       alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n     } else {\n       const newGorev = {\n         id: Math.random(),\n         gorev: input,\n       };\n       setList([...list, newGorev]);\n       setInput('');\n       alert('Görev ekleme işlemi başarılı.');\n     }\n   };\n  */\n\n  const addTask = () => {\n    if (input.trim() === '') {\n      alert(\"Yapılacaklar girişine boş metin eklenemez.\");\n    } else {\n      const newGorev = {\n        id: Math.random(),\n        gorev: input,\n      };\n      setList([...list, newGorev]);\n      setInput('');\n      saveToLocalStorage([...list, newGorev]); // Veriyi localStorage'a kaydet\n      alert('Görev ekleme işlemi başarılı.');\n    }\n  };\n\n  const saveEditedTask = (id, newTask) => {\n    const updatedList = list.map((todo) =>\n      todo.id === id ? { ...todo, gorev: newTask } : todo\n    );\n    setList(updatedList);\n    setEditedTask(null);\n    saveToLocalStorage(updatedList); // Veriyi localStorage'a kaydet\n  };\n\n\n\n\n  /*  useEffect(() => {\n     const localDatas = JSON.parse(localStorage.getItem(\"taskList\"));\n \n     if (localDatas) {\n \n       setList(localDatas);\n     }\n   }, []);\n \n   useEffect(() => {\n     localStorage.setItem(\"taskList\", JSON.stringify(list));\n \n   }, [list]); */\n\n  const saveToLocalStorage = (data) => {\n    localStorage.setItem(\"taskList\", JSON.stringify(data));\n  };\n\n  const getFromLocalStorage = () => {\n    const data = localStorage.getItem(\"taskList\");\n    return data ? JSON.parse(data) : [];\n  };\n\n\n  useEffect(() => {\n    const localDatas = getFromLocalStorage();\n\n    if (localDatas.length > 0 && list.length === 0) {\n      setList(localDatas);\n    }\n  }, [list]);\n\n\n  useEffect(() => {\n    saveToLocalStorage(list);\n  }, [list]);\n\n\n\n\n\n\n\n\n\n\n  const isListEmpty = list.length === 0;\n\n\n\n  return (\n    <div className=\"todo-container\">\n\n      <h1 style={{ color: isListEmpty ? \"green\" : \"black\" }}>Todo List</h1>\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button style={{ backgroundColor: \"green\", color: \"white\" }} onClick={addTask}>EKLE</button>\n      <table>\n        <thead>\n          <tr>\n            <th style={{ marginRight: \"10px\" }}>Görev</th>\n            <th style={{ marginLeft: \"10px\" }}>İşlemler</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.map((todo) => (\n            <tr key={todo.id}>\n\n\n\n              {/*               <td>\n                {editedTask === todo.id ? (\n                  <div>\n                    <input\n                      type=\"text\"\n                      value={todo.gorev}\n                      onChange={(e) => saveEditedTask(todo.id, e.target.value)}\n\n                    />\n                    <button onClick={() => saveEditedTask(todo.id, todo.gorev)}>\n                      KAYDET\n                    </button>\n                  </div>\n                ) : (\n                  <div>{todo.gorev}</div>\n                )}\n              </td>\n              <td>\n                <button style={{ backgroundColor: \"red\", color: \"white\", marginRight: \"10px\" }} onClick={() => deleteTodo(todo.id)}>SİL</button>\n\n                <button style={{ backgroundColor: \"yellow\", color: \"gray\", marginLeft: \"10px\" }} onClick={() => editTask(todo.id)}>DÜZENLE</button>\n              </td> */}\n\n\n              <td>\n                {editedTask === todo.id ? (\n                  <div>\n                    <input\n                      type=\"text\"\n                      value={todo.gorev}\n                      onChange={(e) => saveEditedTask(todo.id, e.target.value)}\n                    />\n                    <button onClick={() => saveEditedTask(todo.id, todo.gorev)}>\n                      KAYDET\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    {todo.gorev}\n                    <button onClick={() => editTask(todo.id)}>DÜZENLE</button>\n                  </div>\n                )}\n              </td>\n\n\n\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default TodoList;\n"],"mappings":";;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAOlD,MAAMY,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGR,IAAI,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IAErDN,OAAO,CAACO,OAAO,CAAC;EAClB,CAAC;;EAKD;AACF;AACA;AACA;AACA;AACA;;EAEE,MAAMG,QAAQ,GAAIJ,EAAE,IAAK;IACvBF,aAAa,CAACE,EAAE,CAAC;EACnB,CAAC;;EAMD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMK,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIV,KAAK,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBC,KAAK,CAAC,4CAA4C,CAAC;IACrD,CAAC,MAAM;MACL,MAAMC,QAAQ,GAAG;QACfR,EAAE,EAAES,IAAI,CAACC,MAAM,CAAC,CAAC;QACjBC,KAAK,EAAEhB;MACT,CAAC;MACDD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEe,QAAQ,CAAC,CAAC;MAC5BZ,QAAQ,CAAC,EAAE,CAAC;MACZgB,kBAAkB,CAAC,CAAC,GAAGnB,IAAI,EAAEe,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzCD,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,MAAMM,cAAc,GAAGA,CAACb,EAAE,EAAEc,OAAO,KAAK;IACtC,MAAMC,WAAW,GAAGtB,IAAI,CAACuB,GAAG,CAAEb,IAAI,IAChCA,IAAI,CAACH,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGG,IAAI;MAAEQ,KAAK,EAAEG;IAAQ,CAAC,GAAGX,IACjD,CAAC;IACDT,OAAO,CAACqB,WAAW,CAAC;IACpBjB,aAAa,CAAC,IAAI,CAAC;IACnBc,kBAAkB,CAACG,WAAW,CAAC,CAAC,CAAC;EACnC,CAAC;;EAKD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAME,MAAMH,kBAAkB,GAAIK,IAAI,IAAK;IACnCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACxD,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAML,IAAI,GAAGC,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC;IAC7C,OAAON,IAAI,GAAGG,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC,GAAG,EAAE;EACrC,CAAC;EAGD7B,SAAS,CAAC,MAAM;IACd,MAAMqC,UAAU,GAAGH,mBAAmB,CAAC,CAAC;IAExC,IAAIG,UAAU,CAACC,MAAM,GAAG,CAAC,IAAIjC,IAAI,CAACiC,MAAM,KAAK,CAAC,EAAE;MAC9ChC,OAAO,CAAC+B,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,CAAChC,IAAI,CAAC,CAAC;EAGVL,SAAS,CAAC,MAAM;IACdwB,kBAAkB,CAACnB,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAWV,MAAMkC,WAAW,GAAGlC,IAAI,CAACiC,MAAM,KAAK,CAAC;EAIrC,oBACEpC,OAAA;IAAKsC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BvC,OAAA;MAAIwC,KAAK,EAAE;QAAEC,KAAK,EAAEJ,WAAW,GAAG,OAAO,GAAG;MAAQ,CAAE;MAAAE,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrE7C,OAAA;MACEsC,SAAS,EAAC,YAAY;MACtBQ,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE1C,KAAM;MACb2C,QAAQ,EAAGC,CAAC,IAAK3C,QAAQ,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF7C,OAAA;MAAQwC,KAAK,EAAE;QAAEW,eAAe,EAAE,OAAO;QAAEV,KAAK,EAAE;MAAQ,CAAE;MAACW,OAAO,EAAErC,OAAQ;MAAAwB,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5F7C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,eACEvC,OAAA;UAAAuC,QAAA,gBACEvC,OAAA;YAAIwC,KAAK,EAAE;cAAEa,WAAW,EAAE;YAAO,CAAE;YAAAd,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9C7C,OAAA;YAAIwC,KAAK,EAAE;cAAEc,UAAU,EAAE;YAAO,CAAE;YAAAf,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR7C,OAAA;QAAAuC,QAAA,EACGpC,IAAI,CAACuB,GAAG,CAAEb,IAAI,iBACbb,OAAA;UAAAuC,QAAA,eA4BEvC,OAAA;YAAAuC,QAAA,EACGhC,UAAU,KAAKM,IAAI,CAACH,EAAE,gBACrBV,OAAA;cAAAuC,QAAA,gBACEvC,OAAA;gBACE8C,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAElC,IAAI,CAACQ,KAAM;gBAClB2B,QAAQ,EAAGC,CAAC,IAAK1B,cAAc,CAACV,IAAI,CAACH,EAAE,EAAEuC,CAAC,CAACC,MAAM,CAACH,KAAK;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eACF7C,OAAA;gBAAQoD,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAACV,IAAI,CAACH,EAAE,EAAEG,IAAI,CAACQ,KAAK,CAAE;gBAAAkB,QAAA,EAAC;cAE5D;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,gBAEN7C,OAAA;cAAAuC,QAAA,GACG1B,IAAI,CAACQ,KAAK,eACXrB,OAAA;gBAAQoD,OAAO,EAAEA,CAAA,KAAMtC,QAAQ,CAACD,IAAI,CAACH,EAAE,CAAE;gBAAA6B,QAAA,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC,GA9CEhC,IAAI,CAACH,EAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmDZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV;AAAC3C,EAAA,CAxNQD,QAAQ;AAAAsD,EAAA,GAARtD,QAAQ;AA0NjB,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}