{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asl\\u0131 Akkaya\\\\reactSSTTEK\\\\odev1\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  // State tanımlayın\n  const [task, setTask] = useState('');\n  const [list, setList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (task.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n      setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: task\n      };\n      setList([...list, newGorev]);\n      setTask('');\n      setErrorMessage('Görev ekleme işlemi başarılı.');\n      setTask('');\n    }\n  };\n\n  // Görev silme işlevi\n  const deleteTask = id => {\n    const newList = list.filter(gorev => gorev.id !== id);\n    setList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Yap\\u0131lacaklar\\u0131 girin\",\n      value: task,\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(gorev => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [gorev.gorev, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(gorev.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, gorev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"NFRtv74eThf1s1DDm3b6Rh5hCJg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","task","setTask","list","setList","errorMessage","setErrorMessage","addTask","trim","newGorev","id","Math","random","gorev","deleteTask","newList","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Aslı Akkaya/reactSSTTEK/odev1/todolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoList() {\n  // State tanımlayın\n  const [task, setTask] = useState('');\n  const [list, setList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n\n\n\n\n\n\n  // Görev ekleme işlevi\n  const addTask = () => {\n    if (task.trim() === '') {\n      // Eğer görev boşsa hata mesajı göster\n      setErrorMessage('Yapılacaklar girişine boş metin eklenemez.');\n    } else {\n      // Görevi listeye ekleyin ve hata mesajını temizleyin\n      const newGorev = {\n        id: Math.random(),\n        gorev: task,\n      };\n      setList([...list, newGorev]);\n      setTask('');\n      setErrorMessage('Görev ekleme işlemi başarılı.');\n      setTask('');\n    }\n  };\n\n  // Görev silme işlevi\n  const deleteTask = (id) => {\n    const newList = list.filter((gorev) => gorev.id !== id);\n    setList(newList);\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Yapılacakları girin\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n      />\n      <button onClick={addTask}>Ekle</button>\n\n      {errorMessage && <p>{errorMessage}</p>}\n\n\n\n\n\n\n      <ul>\n        {list.map((gorev) => (\n          <li key={gorev.id}>\n            {gorev.gorev}\n            <button onClick={() => deleteTask(gorev.id)} >&times;</button>\n          </li>\n        ))}\n      </ul>\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}